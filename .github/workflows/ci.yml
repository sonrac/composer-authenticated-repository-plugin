name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ['8.2', '8.3', '8.4']

    name: PHP ${{ matrix.php-versions }} Test

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: openssl, pdo, sqlite, pdo_sqlite
        coverage: xdebug

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-versions }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-versions }}-


    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Validate composer.json
      run: composer validate --no-check-lock

    - name: Prepare config
      run: cp phpunit.xml.dist phpunit.xml

    - name: Run tests
      run: ./vendor/bin/phpunit

    - name: Generate coverage report
      run: XDEBUG_MODE=coverage ./vendor/bin/phpunit --coverage-clover=coverage.xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  phpstan:
    runs-on: ubuntu-latest
    name: PHPStan Static Analysis

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: openssl, pdo, sqlite, pdo_sqlite

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-8.2-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-8.2-


    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Prepare config
      run: cp phpstan.neon.dist phpstan.neon

    - name: Run PHPStan
      run: ./vendor/bin/phpstan --memory-limit=-1

  phpcs:
    runs-on: ubuntu-latest
    name: PHP Code Style Check

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: openssl, pdo, sqlite, pdo_sqlite

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-8.2-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-8.2-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Prepare config
      run: cp phpcs.xml.dist phpcs.xml

    - name: Run PHP Code Sniffer
      run: ./vendor/bin/phpcs

  security:
    runs-on: ubuntu-latest
    name: Security Check

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: openssl, pdo, sqlite, pdo_sqlite

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-8.2-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-8.2-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Audit
      run: composer audit
